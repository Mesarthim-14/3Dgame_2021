//=============================================================================
//
// ライフゲージの枠 [life_frame.cpp]
// Author : Konishi Yuuto
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "life_frame.h"
#include "renderer.h"
#include "manager.h"
#include "texture.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define LIFE_FRAME_POS	(D3DXVECTOR3(SCREEN_WIDTH / 2, 600.0f, 0.0f))
#define LIFE_FRAME_SIZE	(D3DXVECTOR3(350.0f, 7.0f, 0.0f))

//=============================================================================
// コンストラクタ
//=============================================================================
CLifeFrame::CLifeFrame()
{

}

//=============================================================================
// デストラクタ
//=============================================================================
CLifeFrame::~CLifeFrame()
{

}

//=============================================================================
// オブジェクト生成
//=============================================================================
CLifeFrame *CLifeFrame::Create(void)
{
	// メモ位確保
	CLifeFrame *pLifeFrame = new CLifeFrame;

	// 初期化処理
	pLifeFrame->Init();

	return S_OK;
}


//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CLifeFrame::Init(void)
{
	// 初期化処理
	CUi::Init(LIFE_FRAME_POS, LIFE_FRAME_SIZE);
	SetObjType(OBJTYPE_UI);
	BindTexture(CTexture::GetTexture(CTexture::TEXTURE_NUM_LIFEBAR));

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CLifeFrame::Uninit(void)
{
	// 終了処理
	CUi::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CLifeFrame::Update(void)
{
	// 更新処理
	CUi::Update();
}

//=============================================================================
// 描画処理
//=============================================================================
void CLifeFrame::Draw(void)
{
	// 描画処理
	CUi::Draw();
}